///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            24/Aug/2015  16:26:30 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  D:\desk\cc2530\ch5\3 new task                     /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\Source\1stTest\PM2.5.c                     /
//    Command line       =  -f "D:\desk\cc2530\ch5\3 new task                 /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord. /
//                          cfg" (-DCPU32MHZ -DROOT=__near_func               /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f "D:\desk\cc2530\ch5\3 new task                 /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig /
//                          .cfg" (-DZIGBEEPRO -DSECURE=0                     /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "D:\desk\cc2530\ch5\3 new  /
//                          task perfect\ZStack-2.5.1a\Projects\zstack\Sample /
//                          s\SampleApp\Source\1stTest\PM2.5.c" -D ZTOOL_P1   /
//                          -D xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D    /
//                          LCD_SUPPORTED=DEBUG -lC "D:\desk\cc2530\ch5\3     /
//                          new task perfect\ZStack-2.5.1a\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\CoordinatorEB\List\"     /
//                          -lA "D:\desk\cc2530\ch5\3 new task                /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\CoordinatorEB\List\"              /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "D:\desk\cc2530\ch5\3 new task                    /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\CoordinatorEB\Obj\" -e            /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I "D:\desk\cc2530\ch5\3     /
//                          new task perfect\ZStack-2.5.1a\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\" -I                     /
//                          "D:\desk\cc2530\ch5\3 new task                    /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\Source\" -I                    /
//                          "D:\desk\cc2530\ch5\3 new task                    /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\ZMain\TI2530DB\" -I      /
//                          "D:\desk\cc2530\ch5\3 new task                    /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\hal\inc /
//                          lude\" -I "D:\desk\cc2530\ch5\3 new task          /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\hal\tar /
//                          get\CC2530EB\" -I "D:\desk\cc2530\ch5\3 new task  /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\inc /
//                          lude\" -I "D:\desk\cc2530\ch5\3 new task          /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\hig /
//                          h_level\" -I "D:\desk\cc2530\ch5\3 new task       /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\low /
//                          _level\srf04\" -I "D:\desk\cc2530\ch5\3 new task  /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mac\low /
//                          _level\srf04\single_chip\" -I                     /
//                          "D:\desk\cc2530\ch5\3 new task                    /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\mt\"    /
//                          -I "D:\desk\cc2530\ch5\3 new task                 /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\osal\in /
//                          clude\" -I "D:\desk\cc2530\ch5\3 new task         /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\service /
//                          s\saddr\" -I "D:\desk\cc2530\ch5\3 new task       /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\service /
//                          s\sdata\" -I "D:\desk\cc2530\ch5\3 new task       /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\a /
//                          f\" -I "D:\desk\cc2530\ch5\3 new task             /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\n /
//                          wk\" -I "D:\desk\cc2530\ch5\3 new task            /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\s /
//                          api\" -I "D:\desk\cc2530\ch5\3 new task           /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\s /
//                          ec\" -I "D:\desk\cc2530\ch5\3 new task            /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\s /
//                          ys\" -I "D:\desk\cc2530\ch5\3 new task            /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\stack\z /
//                          do\" -I "D:\desk\cc2530\ch5\3 new task            /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\zmac\"  /
//                          -I "D:\desk\cc2530\ch5\3 new task                 /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\Components\zmac\f8 /
//                          w\" -Ohz --require_prototypes                     /
//    List file          =  D:\desk\cc2530\ch5\3 new task                     /
//                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\CoordinatorEB\List\PM2.5.s51      /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME `PM2.5`

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_MUL
        EXTERN ?FLT_TO_L
        EXTERN ?L_MOV_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?S_DIV_MOD
        EXTERN ?S_SHL
        EXTERN ?UL_TO_FLT
        EXTERN ?US_DIV_MOD
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??Init_PM25?relay
        FUNCTION ??Init_PM25?relay,0203H
        PUBLIC ??Read_PM25?relay
        FUNCTION ??Read_PM25?relay,0203H
        PUBLIC ??background_PM25?relay
        FUNCTION ??background_PM25?relay,0203H
        PUBLIC ??background_PM25_ADC?relay
        FUNCTION ??background_PM25_ADC?relay,0203H
        PUBWEAK ADCCFG
        PUBWEAK ADCCON1
        PUBWEAK ADCCON3
        PUBWEAK ADCH
        PUBWEAK ADCL
        PUBLIC Init_PM25
        FUNCTION Init_PM25,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBWEAK P0DIR
        PUBWEAK P1DIR
        PUBLIC Read_PM25
        FUNCTION Read_PM25,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 68, STACK
        PUBLIC Temp_PM25
        PUBWEAK _A_P1
        PUBWEAK __Constant_3a000000
        PUBWEAK __Constant_42040000
        PUBWEAK __Constant_42600000
        PUBWEAK __Constant_447a0000
        PUBWEAK __Constant_c0e00000
        PUBLIC background_PM25
        FUNCTION background_PM25,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC background_PM25_ADC
        FUNCTION background_PM25_ADC,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
SendData            SYMBOL "SendData"
??SendData?relay    SYMBOL "?relay", SendData
UartSendString      SYMBOL "UartSendString"
??UartSendString?relay SYMBOL "?relay", UartSendString
delay_25us          SYMBOL "delay_25us"
??delay_25us?relay  SYMBOL "?relay", delay_25us
Init_PM25           SYMBOL "Init_PM25"
??Init_PM25?relay   SYMBOL "?relay", Init_PM25
Read_PM25           SYMBOL "Read_PM25"
??Read_PM25?relay   SYMBOL "?relay", Read_PM25
background_PM25     SYMBOL "background_PM25"
??background_PM25?relay SYMBOL "?relay", background_PM25
background_PM25_ADC SYMBOL "background_PM25_ADC"
??background_PM25_ADC?relay SYMBOL "?relay", background_PM25_ADC

        EXTERN ??SendData?relay
        FUNCTION ??SendData?relay,00H
        EXTERN ??UartSendString?relay
        FUNCTION ??UartSendString?relay,00H
        EXTERN ??delay_25us?relay
        FUNCTION ??delay_25us?relay,00H
        EXTERN SendData
        FUNCTION SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN UartSendString
        FUNCTION UartSendString,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN delay_25us
        FUNCTION delay_25us,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\desk\cc2530\ch5\3 new task perfect\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\1stTest\PM2.5.c
//    1 #include <iocc2530.h>

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b4H
// unsigned char volatile __sfr ADCCON1
ADCCON1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0b6H
// unsigned char volatile __sfr ADCCON3
ADCCON3:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0baH
// unsigned char volatile __sfr ADCL
ADCL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0bbH
// unsigned char volatile __sfr ADCH
ADCH:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f2H
// unsigned char volatile __sfr ADCCFG
ADCCFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1
//    2 #include "Sensor.h"
//    3 #include "UART.H"
//    4 extern void delay_25us(void);
//    5 extern void SendData(unsigned int i, unsigned char Data);
//    6 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    7 unsigned int Temp_PM25[10] = {0};
Temp_PM25:
        DS 20
        REQUIRE __INIT_XDATA_Z
//    8 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    9 void Init_PM25(void)
Init_PM25:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function Init_PM25
        CODE
//   10 {
        ; Saved register size: 0
        ; Auto size: 0
//   11   P0DIR &= ~0x20;                   //P0_5-->Inp
        ANL     0xfd,#0xdf
//   12   P1DIR |= 0x02;                    //P1_1-->Output
        ORL     0xfe,#0x2
//   13   ADCCFG |= 0x20;                   //Set P0_5 Analog Periferal I/O
        ORL     0xf2,#0x20
//   14 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock0
        REQUIRE P0DIR
        REQUIRE P1DIR
        REQUIRE ADCCFG

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   15 void background_PM25_ADC(void)
background_PM25_ADC:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function background_PM25_ADC
        CODE
//   16 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//   17   unsigned int  value = 0, MSD = 0, LSD = 0;
//   18   static int i = 0;
//   19   
//   20   ADCCON1 = 0x33;
        MOV     0xb4,#0x33
//   21   ADCCON3 = 0x00;
        MOV     0xb6,#0x0
//   22   
//   23   ADCCON1 |= 0x30;                  //Start a conversion sequence if ADCCON1.STSEL = 11 and no sequence is running.
        ORL     0xb4,#0x30
//   24                                     
//   25   ADCCON3 |= 0x80;                  //AVDD5 pin
        ORL     0xb6,#0x80
//   26   ADCCON3 |= 0x30;                  //512 decimation rate (12 bits ENOB)
        ORL     0xb6,#0x30
//   27   ADCCON3 |= 0x05;                  //AIN5
        ORL     0xb6,#0x5
//   28                    
//   29   ADCCON1 |= 0x40;                  //Start conversion
        ORL     0xb4,#0x40
//   30   while(!(ADCCON1 & 0x80));        
??background_PM25_ADC_0:
        MOV     A,0xb4
        MOV     C,0xE0 /* A   */.7
        JNC     ??background_PM25_ADC_0
//   31 
//   32   LSD = ADCL;
        MOV     A,0xba
//   33   LSD = LSD >>4;
//   34   MSD = ADCH;
//   35   MSD = MSD <<4;
//   36   value = LSD + MSD;                
//   37   
//   38   Temp_PM25[i++] = value;
        SWAP    A
        ANL     A,#0xf
        MOV     R2,A
        MOV     A,0xbb
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R2
        ADD     A,?V0 + 0
        MOV     R2,A
        CLR     A
        ADDC    A,?V0 + 1
        MOV     R3,A
        MOV     DPTR,#??i
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        RLC     A
        MOV     R0,A
        MOV     A,R1
        RLC     A
        MOV     R1,A
        MOV     A,#Temp_PM25 & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(Temp_PM25 >> 8) & 0xff
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPTR,#??i
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
//   39   if(i == 10)i=0;
        MOV     DPTR,#??i
        MOVX    A,@DPTR
        XRL     A,#0xa
        JNZ     ??background_PM25_ADC_1
        INC     DPTR
        MOVX    A,@DPTR
??background_PM25_ADC_1:
        JNZ     ??background_PM25_ADC_2
        MOV     DPTR,#??i
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   40 }
??background_PM25_ADC_2:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1
        REQUIRE ADCCON1
        REQUIRE ADCCON3
        REQUIRE ADCL
        REQUIRE ADCH

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
??i:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   41 void background_PM25(void)
background_PM25:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function background_PM25
        CODE
//   42 {
        FUNCALL background_PM25, delay_25us
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL background_PM25, background_PM25_ADC
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   43   char i = 0;
        MOV     R6,#0x0
//   44   P1_1 = 1;
        SETB    0x90.1
        SJMP    ??background_PM25_0
//   45   while(i++ <14)delay_25us();
??background_PM25_1:
        ; Setup parameters for call to function delay_25us
        LCALL   ??delay_25us?relay
??background_PM25_0:
        MOV     A,R6
        INC     R6
        CLR     C
        SUBB    A,#0xe
        JC      ??background_PM25_1
//   46   background_PM25_ADC();
        ; Setup parameters for call to function background_PM25_ADC
        LCALL   ??background_PM25_ADC?relay
//   47   P1_1 = 0;
        CLR     0x90.1
//   48 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
        REQUIRE _A_P1

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   49 void Read_PM25(void)
Read_PM25:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function Read_PM25
        CODE
//   50 {
        FUNCALL Read_PM25, UartSendString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Read_PM25, SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Read_PM25, SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Read_PM25, SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 68, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 68, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 52
        MOV     A,#-0x34
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 68)
//   51   unsigned char i ,PM25uchar[21] = "Dust Density:   ug/m3",
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "Dust Density:   ug/m3">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "Dust Density:   ug/m3">` & 0xff
        MOV     A,#0x15
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//   52                 UnderThreshold[31] = "Dust Density is under threshold";
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "Dust Density is under...">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "Dust Density is under...">` & 0xff
        MOV     A,#0x1f
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//   53   unsigned int Sum = 0;
        MOV     R0,A
        MOV     R1,A
//   54   float X = 0;
//   55   
//   56   for(i = 0; i <10; i++)
        MOV     R4,A
//   57     Sum = Temp_PM25[i] + Sum;
??Read_PM25_0:
        MOV     A,R4
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        MOV     A,#Temp_PM25 & 0xff
        ADD     A,R2
        MOV     DPL,A
        MOV     A,#(Temp_PM25 >> 8) & 0xff
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        INC     R4
        MOV     A,R4
        CLR     C
        SUBB    A,#0xa
        JC      ??Read_PM25_0
//   58   Sum = Sum /10;
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?US_DIV_MOD
//   59   if(Sum < 435)
        MOV     A,R0
        SUBB    A,#-0x4d
        MOV     A,R1
        SUBB    A,#0x1
        JNC     ??Read_PM25_1
//   60     UartSendString(UnderThreshold, 31);
        ; Setup parameters for call to function UartSendString
        MOV     R4,#0x1f
        MOV     R5,#0x0
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??UartSendString?relay
        LJMP    ??Read_PM25_2 & 0xFFFF
//   61   else
//   62   {
//   63   X = (float)Sum*33/2048;                 //x10
//   64   X = (X-7)/56*1000;                      //change the unit(mg/m3) to um/m3
??Read_PM25_1:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#__Constant_42040000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_3a000000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_c0e00000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_42600000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#__Constant_447a0000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
//   65   
//   66   PM25uchar[13] = (int)X/100 +0x30;
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R0
        ADD     A,#0x30
        MOV     ?V0 + 0,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        LCALL   ?Subroutine0 & 0xFFFF
//   67   PM25uchar[14] = (int)X/10%10 +0x30;
??CrossCallReturnLabel_0:
        LCALL   ?S_DIV_MOD
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R2
        ADD     A,#0x30
        MOV     R6,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        LCALL   ?Subroutine0 & 0xFFFF
//   68   PM25uchar[15] = (int)X%10 +0x30;
??CrossCallReturnLabel_1:
        LCALL   ?S_DIV_MOD
        MOV     A,R2
        ADD     A,#0x30
        MOV     R7,A
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R7
        MOVX    @DPTR,A
//   69   
//   70   SendData(7,PM25uchar[13]);
        ; Setup parameters for call to function SendData
        MOV     R1,?V0 + 0
        MOV     R2,#0x7
        MOV     R3,#0x0
        LCALL   ??SendData?relay
//   71   SendData(8,PM25uchar[14]);
        ; Setup parameters for call to function SendData
        MOV     A,R6
        MOV     R1,A
        MOV     R2,#0x8
        MOV     R3,#0x0
        LCALL   ??SendData?relay
//   72   SendData(9,PM25uchar[15]);
        ; Setup parameters for call to function SendData
        MOV     A,R7
        MOV     R1,A
        MOV     R2,#0x9
        MOV     R3,#0x0
        LCALL   ??SendData?relay
//   73   /*
//   74   UartSendString(PM25uchar, 21);*/
//   75   }
//   76 }
??Read_PM25_2:
        MOV     A,#0x34
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiCond4 Using cfiCommon0
          CFI Function Read_PM25
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 68)
          CFI Block cfiCond5 Using cfiCommon0
          CFI (cfiCond5) Function Read_PM25
          CFI (cfiCond5) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond5) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond5) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond5) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond5) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond5) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond5) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond5) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond5) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond5) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond5) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond5) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond5) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond5) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond5) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond5) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond5) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond5) CFA_SP SP+0
          CFI (cfiCond5) CFA_XSP16 add(XSP16, 68)
          CFI Block cfiPicker6 Using cfiCommon1
          CFI (cfiPicker6) NoFunction
          CFI (cfiPicker6) Picker
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        RET
          CFI EndBlock cfiCond4
          CFI EndBlock cfiCond5
          CFI EndBlock cfiPicker6

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Init_PM25?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    Init_PM25

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??background_PM25_ADC?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    background_PM25_ADC

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??background_PM25?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    background_PM25

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Read_PM25?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    Read_PM25

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Dust Density:   ug/m3">`:
        DB 44H, 75H, 73H, 74H, 20H, 44H, 65H, 6EH
        DB 73H, 69H, 74H, 79H, 3AH, 20H, 20H, 20H
        DB 75H, 67H, 2FH, 6DH, 33H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Dust Density is under...">`:
        DB 44H, 75H, 73H, 74H, 20H, 44H, 65H, 6EH
        DB 73H, 69H, 74H, 79H, 20H, 69H, 73H, 20H
        DB 75H, 6EH, 64H, 65H, 72H, 20H, 74H, 68H
        DB 72H, 65H, 73H, 68H, 6FH, 6CH, 64H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42040000:
        DD 42040000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3a000000:
        DD 3A000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c0e00000:
        DD 0C0E00000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_42600000:
        DD 42600000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_447a0000:
        DD 447A0000H

        END
//   77   
// 
// 495 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   8 bytes in segment SFR_AN
//  72 bytes in segment XDATA_ROM_C
//  22 bytes in segment XDATA_Z
// 
// 519 bytes of CODE  memory
//  52 bytes of CONST memory (+ 20 bytes shared)
//   0 bytes of DATA  memory (+  8 bytes shared)
//  22 bytes of XDATA memory
//
//Errors: none
//Warnings: none
