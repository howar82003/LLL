###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.20.2.41139 for 8051             24/Aug/2015  16:26:30 #
# Copyright 2004-2013 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#                                                                             #
#    Source file        =  D:\desk\cc2530\ch5\3 new task                      #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\Source\1stTest\PM2.5.c                       #
#    Command line       =  -f "D:\desk\cc2530\ch5\3 new task                  #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cf #
#                          g" (-DCPU32MHZ -DROOT=__near_func                  #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f "D:\desk\cc2530\ch5\3 new task                  #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.c #
#                          fg" (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0  #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 "D:\desk\cc2530\ch5\3 new   #
#                          task perfect\ZStack-2.5.1a\Projects\zstack\Samples #
#                          \SampleApp\Source\1stTest\PM2.5.c" -D ZTOOL_P1 -D  #
#                          xMT_TASK -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D        #
#                          LCD_SUPPORTED=DEBUG -lC "D:\desk\cc2530\ch5\3 new  #
#                          task perfect\ZStack-2.5.1a\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\CoordinatorEB\List\" -lA       #
#                          "D:\desk\cc2530\ch5\3 new task                     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\CoordinatorEB\List\"                #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "D:\desk\cc2530\ch5\3 new task                     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\CoordinatorEB\Obj\" -e              #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "D:\desk\cc2530\ch5\3 new task                  #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\" -I "D:\desk\cc2530\ch5\3 new      #
#                          task perfect\ZStack-2.5.1a\Projects\zstack\Samples #
#                          \SampleApp\CC2530DB\..\Source\" -I                 #
#                          "D:\desk\cc2530\ch5\3 new task                     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\ZMain\TI2530DB\" -I        #
#                          "D:\desk\cc2530\ch5\3 new task                     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\hal\inclu #
#                          de\" -I "D:\desk\cc2530\ch5\3 new task             #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\hal\targe #
#                          t\CC2530EB\" -I "D:\desk\cc2530\ch5\3 new task     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\mac\inclu #
#                          de\" -I "D:\desk\cc2530\ch5\3 new task             #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\mac\high_ #
#                          level\" -I "D:\desk\cc2530\ch5\3 new task          #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\mac\low_l #
#                          evel\srf04\" -I "D:\desk\cc2530\ch5\3 new task     #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\mac\low_l #
#                          evel\srf04\single_chip\" -I "D:\desk\cc2530\ch5\3  #
#                          new task perfect\ZStack-2.5.1a\Projects\zstack\Sam #
#                          ples\SampleApp\CC2530DB\..\..\..\..\..\Components\ #
#                          mt\" -I "D:\desk\cc2530\ch5\3 new task             #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\osal\incl #
#                          ude\" -I "D:\desk\cc2530\ch5\3 new task            #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\services\ #
#                          saddr\" -I "D:\desk\cc2530\ch5\3 new task          #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\services\ #
#                          sdata\" -I "D:\desk\cc2530\ch5\3 new task          #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\af\ #
#                          " -I "D:\desk\cc2530\ch5\3 new task                #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\nwk #
#                          \" -I "D:\desk\cc2530\ch5\3 new task               #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\sap #
#                          i\" -I "D:\desk\cc2530\ch5\3 new task              #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\sec #
#                          \" -I "D:\desk\cc2530\ch5\3 new task               #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\sys #
#                          \" -I "D:\desk\cc2530\ch5\3 new task               #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\stack\zdo #
#                          \" -I "D:\desk\cc2530\ch5\3 new task               #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\zmac\"    #
#                          -I "D:\desk\cc2530\ch5\3 new task                  #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\ #
#                          " -Ohz --require_prototypes                        #
#    List file          =  D:\desk\cc2530\ch5\3 new task                      #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\CoordinatorEB\List\PM2.5.lst        #
#    Object file        =  D:\desk\cc2530\ch5\3 new task                      #
#                          perfect\ZStack-2.5.1a\Projects\zstack\Samples\Samp #
#                          leApp\CC2530DB\CoordinatorEB\Obj\PM2.5.r51         #
#                                                                             #
#                                                                             #
###############################################################################

D:\desk\cc2530\ch5\3 new task perfect\ZStack-2.5.1a\Projects\zstack\Samples\SampleApp\Source\1stTest\PM2.5.c
      1          #include <iocc2530.h>

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb4
   \   unsigned char volatile __sfr ADCCON1
   \                     ADCCON1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xb6
   \   unsigned char volatile __sfr ADCCON3
   \                     ADCCON3:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xba
   \   unsigned char volatile __sfr ADCL
   \                     ADCL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xbb
   \   unsigned char volatile __sfr ADCH
   \                     ADCH:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf2
   \   unsigned char volatile __sfr ADCCFG
   \                     ADCCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfe
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1
      2          #include "Sensor.h"
      3          #include "UART.H"
      4          extern void delay_25us(void);
      5          extern void SendData(unsigned int i, unsigned char Data);
      6          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
      7          unsigned int Temp_PM25[10] = {0};
   \                     Temp_PM25:
   \   000000                DS 20
   \   000014                REQUIRE __INIT_XDATA_Z
      8          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
      9          void Init_PM25(void)
   \                     Init_PM25:
     10          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     11            P0DIR &= ~0x20;                   //P0_5-->Inp
   \   000000   53FDDF       ANL     0xfd,#0xdf
     12            P1DIR |= 0x02;                    //P1_1-->Output
   \   000003   43FE02       ORL     0xfe,#0x2
     13            ADCCFG |= 0x20;                   //Set P0_5 Analog Periferal I/O
   \   000006   43F220       ORL     0xf2,#0x20
     14          }
   \   000009   02....       LJMP    ?BRET
   \   00000C                REQUIRE P0DIR
   \   00000C                REQUIRE P1DIR
   \   00000C                REQUIRE ADCCFG

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     15          void background_PM25_ADC(void)
   \                     background_PM25_ADC:
     16          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
     17            unsigned int  value = 0, MSD = 0, LSD = 0;
     18            static int i = 0;
     19            
     20            ADCCON1 = 0x33;
   \   000005   75B433       MOV     0xb4,#0x33
     21            ADCCON3 = 0x00;
   \   000008   75B600       MOV     0xb6,#0x0
     22            
     23            ADCCON1 |= 0x30;                  //Start a conversion sequence if ADCCON1.STSEL = 11 and no sequence is running.
   \   00000B   43B430       ORL     0xb4,#0x30
     24                                              
     25            ADCCON3 |= 0x80;                  //AVDD5 pin
   \   00000E   43B680       ORL     0xb6,#0x80
     26            ADCCON3 |= 0x30;                  //512 decimation rate (12 bits ENOB)
   \   000011   43B630       ORL     0xb6,#0x30
     27            ADCCON3 |= 0x05;                  //AIN5
   \   000014   43B605       ORL     0xb6,#0x5
     28                             
     29            ADCCON1 |= 0x40;                  //Start conversion
   \   000017   43B440       ORL     0xb4,#0x40
     30            while(!(ADCCON1 & 0x80));        
   \                     ??background_PM25_ADC_0:
   \   00001A   E5B4         MOV     A,0xb4
   \   00001C   A2E7         MOV     C,0xE0 /* A   */.7
   \   00001E   50FA         JNC     ??background_PM25_ADC_0
     31          
     32            LSD = ADCL;
   \   000020   E5BA         MOV     A,0xba
     33            LSD = LSD >>4;
     34            MSD = ADCH;
     35            MSD = MSD <<4;
     36            value = LSD + MSD;                
     37            
     38            Temp_PM25[i++] = value;
   \   000022   C4           SWAP    A
   \   000023   540F         ANL     A,#0xf
   \   000025   FA           MOV     R2,A
   \   000026   E5BB         MOV     A,0xbb
   \   000028   F5..         MOV     ?V0 + 0,A
   \   00002A   75..00       MOV     ?V0 + 1,#0x0
   \   00002D   7404         MOV     A,#0x4
   \   00002F   78..         MOV     R0,#?V0 + 0
   \   000031   12....       LCALL   ?S_SHL
   \   000034   EA           MOV     A,R2
   \   000035   25..         ADD     A,?V0 + 0
   \   000037   FA           MOV     R2,A
   \   000038   E4           CLR     A
   \   000039   35..         ADDC    A,?V0 + 1
   \   00003B   FB           MOV     R3,A
   \   00003C   90....       MOV     DPTR,#??i
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   F8           MOV     R0,A
   \   000041   A3           INC     DPTR
   \   000042   E0           MOVX    A,@DPTR
   \   000043   F9           MOV     R1,A
   \   000044   E8           MOV     A,R0
   \   000045   33           RLC     A
   \   000046   F8           MOV     R0,A
   \   000047   E9           MOV     A,R1
   \   000048   33           RLC     A
   \   000049   F9           MOV     R1,A
   \   00004A   74..         MOV     A,#Temp_PM25 & 0xff
   \   00004C   28           ADD     A,R0
   \   00004D   F582         MOV     DPL,A
   \   00004F   74..         MOV     A,#(Temp_PM25 >> 8) & 0xff
   \   000051   39           ADDC    A,R1
   \   000052   F583         MOV     DPH,A
   \   000054   EA           MOV     A,R2
   \   000055   F0           MOVX    @DPTR,A
   \   000056   A3           INC     DPTR
   \   000057   EB           MOV     A,R3
   \   000058   F0           MOVX    @DPTR,A
   \   000059   90....       MOV     DPTR,#??i
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   2401         ADD     A,#0x1
   \   00005F   F0           MOVX    @DPTR,A
   \   000060   A3           INC     DPTR
   \   000061   E0           MOVX    A,@DPTR
   \   000062   3400         ADDC    A,#0x0
   \   000064   F0           MOVX    @DPTR,A
     39            if(i == 10)i=0;
   \   000065   90....       MOV     DPTR,#??i
   \   000068   E0           MOVX    A,@DPTR
   \   000069   640A         XRL     A,#0xa
   \   00006B   7002         JNZ     ??background_PM25_ADC_1
   \   00006D   A3           INC     DPTR
   \   00006E   E0           MOVX    A,@DPTR
   \                     ??background_PM25_ADC_1:
   \   00006F   7007         JNZ     ??background_PM25_ADC_2
   \   000071   90....       MOV     DPTR,#??i
   \   000074   E4           CLR     A
   \   000075   F0           MOVX    @DPTR,A
   \   000076   A3           INC     DPTR
   \   000077   F0           MOVX    @DPTR,A
     40          }
   \                     ??background_PM25_ADC_2:
   \   000078   7F02         MOV     R7,#0x2
   \   00007A   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00007D                REQUIRE ADCCON1
   \   00007D                REQUIRE ADCCON3
   \   00007D                REQUIRE ADCL
   \   00007D                REQUIRE ADCH

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     ??i:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     41          void background_PM25(void)
   \                     background_PM25:
     42          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     43            char i = 0;
   \   000005   7E00         MOV     R6,#0x0
     44            P1_1 = 1;
   \   000007   D291         SETB    0x90.1
   \   000009   8003         SJMP    ??background_PM25_0
     45            while(i++ <14)delay_25us();
   \                     ??background_PM25_1:
   \   00000B                ; Setup parameters for call to function delay_25us
   \   00000B   12....       LCALL   ??delay_25us?relay
   \                     ??background_PM25_0:
   \   00000E   EE           MOV     A,R6
   \   00000F   0E           INC     R6
   \   000010   C3           CLR     C
   \   000011   940E         SUBB    A,#0xe
   \   000013   40F6         JC      ??background_PM25_1
     46            background_PM25_ADC();
   \   000015                ; Setup parameters for call to function background_PM25_ADC
   \   000015   12....       LCALL   ??background_PM25_ADC?relay
     47            P1_1 = 0;
   \   000018   C291         CLR     0x90.1
     48          }
   \   00001A   7F01         MOV     R7,#0x1
   \   00001C   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00001F                REQUIRE _A_P1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     49          void Read_PM25(void)
   \                     Read_PM25:
     50          {
   \   000000   74F0         MOV     A,#-0x10
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 16
   \   000005                ; Auto size: 52
   \   000005   74CC         MOV     A,#-0x34
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
     51            unsigned char i ,PM25uchar[21] = "Dust Density:   ug/m3",
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant "Dust Density:   ug/m3">` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant "Dust Density:   ug/m3">` & 0xff
   \   00001A   7415         MOV     A,#0x15
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
     52                          UnderThreshold[31] = "Dust Density is under threshold";
   \   00001F   7415         MOV     A,#0x15
   \   000021   12....       LCALL   ?XSTACK_DISP0_8
   \   000024   AC82         MOV     R4,DPL
   \   000026   AD83         MOV     R5,DPH
   \   000028   7583..       MOV     DPH,#(`?<Constant "Dust Density is under...">` >> 8) & 0xff
   \   00002B   7582..       MOV     DPL,#`?<Constant "Dust Density is under...">` & 0xff
   \   00002E   741F         MOV     A,#0x1f
   \   000030   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
     53            unsigned int Sum = 0;
   \   000033   F8           MOV     R0,A
   \   000034   F9           MOV     R1,A
     54            float X = 0;
     55            
     56            for(i = 0; i <10; i++)
   \   000035   FC           MOV     R4,A
     57              Sum = Temp_PM25[i] + Sum;
   \                     ??Read_PM25_0:
   \   000036   EC           MOV     A,R4
   \   000037   C3           CLR     C
   \   000038   33           RLC     A
   \   000039   FA           MOV     R2,A
   \   00003A   E4           CLR     A
   \   00003B   33           RLC     A
   \   00003C   FB           MOV     R3,A
   \   00003D   74..         MOV     A,#Temp_PM25 & 0xff
   \   00003F   2A           ADD     A,R2
   \   000040   F582         MOV     DPL,A
   \   000042   74..         MOV     A,#(Temp_PM25 >> 8) & 0xff
   \   000044   3B           ADDC    A,R3
   \   000045   F583         MOV     DPH,A
   \   000047   E0           MOVX    A,@DPTR
   \   000048   28           ADD     A,R0
   \   000049   F8           MOV     R0,A
   \   00004A   A3           INC     DPTR
   \   00004B   E0           MOVX    A,@DPTR
   \   00004C   39           ADDC    A,R1
   \   00004D   F9           MOV     R1,A
   \   00004E   0C           INC     R4
   \   00004F   EC           MOV     A,R4
   \   000050   C3           CLR     C
   \   000051   940A         SUBB    A,#0xa
   \   000053   40E1         JC      ??Read_PM25_0
     58            Sum = Sum /10;
   \   000055   7A0A         MOV     R2,#0xa
   \   000057   7B00         MOV     R3,#0x0
   \   000059   12....       LCALL   ?US_DIV_MOD
     59            if(Sum < 435)
   \   00005C   E8           MOV     A,R0
   \   00005D   94B3         SUBB    A,#-0x4d
   \   00005F   E9           MOV     A,R1
   \   000060   9401         SUBB    A,#0x1
   \   000062   5013         JNC     ??Read_PM25_1
     60              UartSendString(UnderThreshold, 31);
   \   000064                ; Setup parameters for call to function UartSendString
   \   000064   7C1F         MOV     R4,#0x1f
   \   000066   7D00         MOV     R5,#0x0
   \   000068   7415         MOV     A,#0x15
   \   00006A   12....       LCALL   ?XSTACK_DISP0_8
   \   00006D   AA82         MOV     R2,DPL
   \   00006F   AB83         MOV     R3,DPH
   \   000071   12....       LCALL   ??UartSendString?relay
   \   000074   02....       LJMP    ??Read_PM25_2 & 0xFFFF
     61            else
     62            {
     63            X = (float)Sum*33/2048;                 //x10
     64            X = (X-7)/56*1000;                      //change the unit(mg/m3) to um/m3
   \                     ??Read_PM25_1:
   \   000077   88..         MOV     ?V0 + 0,R0
   \   000079   89..         MOV     ?V0 + 1,R1
   \   00007B   E4           CLR     A
   \   00007C   F5..         MOV     ?V0 + 2,A
   \   00007E   F5..         MOV     ?V0 + 3,A
   \   000080   78..         MOV     R0,#?V0 + 0
   \   000082   12....       LCALL   ?UL_TO_FLT
   \   000085   90....       MOV     DPTR,#__Constant_42040000
   \   000088   78..         MOV     R0,#?V0 + 4
   \   00008A   12....       LCALL   ?L_MOV_X
   \   00008D   78..         MOV     R0,#?V0 + 0
   \   00008F   79..         MOV     R1,#?V0 + 4
   \   000091   12....       LCALL   ?FLT_MUL
   \   000094   90....       MOV     DPTR,#__Constant_3a000000
   \   000097   78..         MOV     R0,#?V0 + 4
   \   000099   12....       LCALL   ?L_MOV_X
   \   00009C   78..         MOV     R0,#?V0 + 0
   \   00009E   79..         MOV     R1,#?V0 + 4
   \   0000A0   12....       LCALL   ?FLT_MUL
   \   0000A3   90....       MOV     DPTR,#__Constant_c0e00000
   \   0000A6   78..         MOV     R0,#?V0 + 4
   \   0000A8   12....       LCALL   ?L_MOV_X
   \   0000AB   78..         MOV     R0,#?V0 + 0
   \   0000AD   79..         MOV     R1,#?V0 + 4
   \   0000AF   12....       LCALL   ?FLT_ADD
   \   0000B2   90....       MOV     DPTR,#__Constant_42600000
   \   0000B5   78..         MOV     R0,#?V0 + 4
   \   0000B7   12....       LCALL   ?L_MOV_X
   \   0000BA   78..         MOV     R0,#?V0 + 0
   \   0000BC   79..         MOV     R1,#?V0 + 4
   \   0000BE   12....       LCALL   ?FLT_DIV
   \   0000C1   90....       MOV     DPTR,#__Constant_447a0000
   \   0000C4   78..         MOV     R0,#?V0 + 4
   \   0000C6   12....       LCALL   ?L_MOV_X
   \   0000C9   78..         MOV     R0,#?V0 + 0
   \   0000CB   79..         MOV     R1,#?V0 + 4
   \   0000CD   12....       LCALL   ?FLT_MUL
     65            
     66            PM25uchar[13] = (int)X/100 +0x30;
   \   0000D0   78..         MOV     R0,#?V0 + 0
   \   0000D2   12....       LCALL   ?FLT_TO_L
   \   0000D5   AC..         MOV     R4,?V0 + 0
   \   0000D7   AD..         MOV     R5,?V0 + 1
   \   0000D9   EC           MOV     A,R4
   \   0000DA   F8           MOV     R0,A
   \   0000DB   ED           MOV     A,R5
   \   0000DC   F9           MOV     R1,A
   \   0000DD   7A64         MOV     R2,#0x64
   \   0000DF   7B00         MOV     R3,#0x0
   \   0000E1   12....       LCALL   ?S_DIV_MOD
   \   0000E4   E8           MOV     A,R0
   \   0000E5   2430         ADD     A,#0x30
   \   0000E7   F5..         MOV     ?V0 + 0,A
   \   0000E9   740D         MOV     A,#0xd
   \   0000EB   12....       LCALL   ?XSTACK_DISP0_8
   \   0000EE   E5..         MOV     A,?V0 + 0
   \   0000F0   12....       LCALL   ?Subroutine0 & 0xFFFF
     67            PM25uchar[14] = (int)X/10%10 +0x30;
   \                     ??CrossCallReturnLabel_0:
   \   0000F3   12....       LCALL   ?S_DIV_MOD
   \   0000F6   7A0A         MOV     R2,#0xa
   \   0000F8   7B00         MOV     R3,#0x0
   \   0000FA   12....       LCALL   ?S_DIV_MOD
   \   0000FD   EA           MOV     A,R2
   \   0000FE   2430         ADD     A,#0x30
   \   000100   FE           MOV     R6,A
   \   000101   740E         MOV     A,#0xe
   \   000103   12....       LCALL   ?XSTACK_DISP0_8
   \   000106   EE           MOV     A,R6
   \   000107   12....       LCALL   ?Subroutine0 & 0xFFFF
     68            PM25uchar[15] = (int)X%10 +0x30;
   \                     ??CrossCallReturnLabel_1:
   \   00010A   12....       LCALL   ?S_DIV_MOD
   \   00010D   EA           MOV     A,R2
   \   00010E   2430         ADD     A,#0x30
   \   000110   FF           MOV     R7,A
   \   000111   740F         MOV     A,#0xf
   \   000113   12....       LCALL   ?XSTACK_DISP0_8
   \   000116   EF           MOV     A,R7
   \   000117   F0           MOVX    @DPTR,A
     69            
     70            SendData(7,PM25uchar[13]);
   \   000118                ; Setup parameters for call to function SendData
   \   000118   A9..         MOV     R1,?V0 + 0
   \   00011A   7A07         MOV     R2,#0x7
   \   00011C   7B00         MOV     R3,#0x0
   \   00011E   12....       LCALL   ??SendData?relay
     71            SendData(8,PM25uchar[14]);
   \   000121                ; Setup parameters for call to function SendData
   \   000121   EE           MOV     A,R6
   \   000122   F9           MOV     R1,A
   \   000123   7A08         MOV     R2,#0x8
   \   000125   7B00         MOV     R3,#0x0
   \   000127   12....       LCALL   ??SendData?relay
     72            SendData(9,PM25uchar[15]);
   \   00012A                ; Setup parameters for call to function SendData
   \   00012A   EF           MOV     A,R7
   \   00012B   F9           MOV     R1,A
   \   00012C   7A09         MOV     R2,#0x9
   \   00012E   7B00         MOV     R3,#0x0
   \   000130   12....       LCALL   ??SendData?relay
     73            /*
     74            UartSendString(PM25uchar, 21);*/
     75            }
     76          }
   \                     ??Read_PM25_2:
   \   000133   7434         MOV     A,#0x34
   \   000135   12....       LCALL   ?DEALLOC_XSTACK8
   \   000138   7F08         MOV     R7,#0x8
   \   00013A   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   F0           MOVX    @DPTR,A
   \   000001   EC           MOV     A,R4
   \   000002   F8           MOV     R0,A
   \   000003   ED           MOV     A,R5
   \   000004   F9           MOV     R1,A
   \   000005   7A0A         MOV     R2,#0xa
   \   000007   7B00         MOV     R3,#0x0
   \   000009   22           RET

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Init_PM25?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Init_PM25

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??background_PM25_ADC?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    background_PM25_ADC

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??background_PM25?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    background_PM25

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Read_PM25?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Read_PM25

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Dust Density:   ug/m3">`:
   \   000000   44757374     DB 44H, 75H, 73H, 74H, 20H, 44H, 65H, 6EH
   \            2044656E
   \   000008   73697479     DB 73H, 69H, 74H, 79H, 3AH, 20H, 20H, 20H
   \            3A202020
   \   000010   75672F6D     DB 75H, 67H, 2FH, 6DH, 33H
   \            33      

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Dust Density is under...">`:
   \   000000   44757374     DB 44H, 75H, 73H, 74H, 20H, 44H, 65H, 6EH
   \            2044656E
   \   000008   73697479     DB 73H, 69H, 74H, 79H, 20H, 69H, 73H, 20H
   \            20697320
   \   000010   756E6465     DB 75H, 6EH, 64H, 65H, 72H, 20H, 74H, 68H
   \            72207468
   \   000018   72657368     DB 72H, 65H, 73H, 68H, 6FH, 6CH, 64H
   \            6F6C64  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42040000:
   \   000000   00000442     DD 42040000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_3a000000:
   \   000000   0000003A     DD 3A000000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_c0e00000:
   \   000000   0000E0C0     DD 0C0E00000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_42600000:
   \   000000   00006042     DD 42600000H

   \                                 In  segment XDATA_ROM_C, align 1
   \                     __Constant_447a0000:
   \   000000   00007A44     DD 447A0000H
     77            

   Maximum stack usage in bytes:

   ISTACK PSTACK XSTACK Function
   ------ ------ ------ --------
       0      0      0  Init_PM25
       2      0     68  Read_PM25
                          0 0 68 -> SendData
                          0 0 68 -> UartSendString
       0      0      9  background_PM25
                          0 0  9 -> background_PM25_ADC
                          0 0  9 -> delay_25us
       0      0     19  background_PM25_ADC


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      31  ?<Constant "Dust Density is under...">
      21  ?<Constant "Dust Density:   ug/m3">
       6  ??Init_PM25?relay
       6  ??Read_PM25?relay
       6  ??background_PM25?relay
       6  ??background_PM25_ADC?relay
      10  ?Subroutine0
       1  ADCCFG
       1  ADCCON1
       1  ADCCON3
       1  ADCH
       1  ADCL
      12  Init_PM25
       1  P0DIR
       1  P1DIR
     317  Read_PM25
      20  Temp_PM25
       1  _A_P1
       4  __Constant_3a000000
       4  __Constant_42040000
       4  __Constant_42600000
       4  __Constant_447a0000
       4  __Constant_c0e00000
      31  background_PM25
     125  background_PM25_ADC
       2  i

 
 495 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   8 bytes in segment SFR_AN
  72 bytes in segment XDATA_ROM_C
  22 bytes in segment XDATA_Z
 
 519 bytes of CODE  memory
  52 bytes of CONST memory (+ 20 bytes shared)
   0 bytes of DATA  memory (+  8 bytes shared)
  22 bytes of XDATA memory

Errors: none
Warnings: none
